// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDo.Infrastructure.EF;

#nullable disable

namespace ToDo.Infrastructure.Migrations
{
    [DbContext(typeof(ToDoDbContext))]
    [Migration("20230226110717_SeedData2")]
    partial class SeedData2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ToDo.Core.Entities.ToDoItem", b =>
                {
                    b.Property<Guid>("ToDoItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("ToDoListId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ToDoItemId");

                    b.HasIndex("ToDoListId");

                    b.ToTable("ToDoItems");

                    b.HasData(
                        new
                        {
                            ToDoItemId = new Guid("3ee1a3c8-4d73-4055-8134-02d201cbbde3"),
                            CreatedDate = new DateTime(2023, 2, 26, 11, 7, 17, 574, DateTimeKind.Utc).AddTicks(2096),
                            Description = "first item",
                            DueDate = new DateTime(2023, 2, 27, 11, 7, 17, 574, DateTimeKind.Utc).AddTicks(2090),
                            Name = "Item1",
                            Notes = "high priority",
                            Status = 0,
                            ToDoListId = new Guid("b598b227-2774-4bf2-b76d-3bec8101bbee")
                        },
                        new
                        {
                            ToDoItemId = new Guid("1eb76f14-0300-414e-97e1-5073ca41f997"),
                            CreatedDate = new DateTime(2023, 2, 26, 11, 7, 17, 574, DateTimeKind.Utc).AddTicks(2102),
                            Description = "second item",
                            DueDate = new DateTime(2023, 3, 5, 11, 7, 17, 574, DateTimeKind.Utc).AddTicks(2101),
                            Name = "Item2",
                            Notes = "low priority",
                            Status = 0,
                            ToDoListId = new Guid("b598b227-2774-4bf2-b76d-3bec8101bbee")
                        },
                        new
                        {
                            ToDoItemId = new Guid("d7500a72-ac19-4482-87cc-4a9e587c0953"),
                            CreatedDate = new DateTime(2023, 2, 26, 11, 7, 17, 574, DateTimeKind.Utc).AddTicks(2104),
                            Description = "first item",
                            DueDate = new DateTime(2023, 3, 1, 11, 7, 17, 574, DateTimeKind.Utc).AddTicks(2104),
                            Name = "Item1",
                            Notes = "high priority",
                            Status = 0,
                            ToDoListId = new Guid("cf4bf63e-bf9f-4312-a2d2-736bb2d8d735")
                        },
                        new
                        {
                            ToDoItemId = new Guid("4ccdd91b-3f56-40e9-a21d-560c63e591d3"),
                            CreatedDate = new DateTime(2023, 2, 26, 11, 7, 17, 574, DateTimeKind.Utc).AddTicks(2106),
                            Description = "first item",
                            DueDate = new DateTime(2023, 3, 3, 11, 7, 17, 574, DateTimeKind.Utc).AddTicks(2106),
                            Name = "First user item",
                            Notes = "high priority",
                            Status = 0,
                            ToDoListId = new Guid("b08bf35b-f70d-433c-afba-786f354cc52a")
                        });
                });

            modelBuilder.Entity("ToDo.Core.Entities.ToDoList", b =>
                {
                    b.Property<Guid>("ToDoListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HiddenFinishedItems")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Visibility")
                        .HasColumnType("bit");

                    b.HasKey("ToDoListId");

                    b.HasIndex("UserId");

                    b.ToTable("ToDoLists");

                    b.HasData(
                        new
                        {
                            ToDoListId = new Guid("b598b227-2774-4bf2-b76d-3bec8101bbee"),
                            HiddenFinishedItems = false,
                            Name = "Admin list1",
                            UserId = new Guid("1d079e6d-376e-4030-8c75-abbe210441fa"),
                            Visibility = true
                        },
                        new
                        {
                            ToDoListId = new Guid("cf4bf63e-bf9f-4312-a2d2-736bb2d8d735"),
                            HiddenFinishedItems = false,
                            Name = "Admin list2",
                            UserId = new Guid("1d079e6d-376e-4030-8c75-abbe210441fa"),
                            Visibility = true
                        },
                        new
                        {
                            ToDoListId = new Guid("b08bf35b-f70d-433c-afba-786f354cc52a"),
                            HiddenFinishedItems = false,
                            Name = "test list1",
                            UserId = new Guid("80947daf-24ce-4e6b-922b-cef29fe189df"),
                            Visibility = true
                        });
                });

            modelBuilder.Entity("ToDo.Core.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("1d079e6d-376e-4030-8c75-abbe210441fa"),
                            Password = "AQAAAAEAACcQAAAAELb8RYqJdzn7PLBd+LYUfJn41mOC14H7ygPPLYW0R5eQxEoMVo3ztNlSNSaZ+Kcl7w==",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = new Guid("80947daf-24ce-4e6b-922b-cef29fe189df"),
                            Password = "AQAAAAEAACcQAAAAEIPSI/aIdKAHjhvblFJggL1gRyOx5vHTHgGtovz03EPuOfgZ8Tm7o4vWgXk9YWyHKw==",
                            Username = "test"
                        });
                });

            modelBuilder.Entity("ToDo.Core.Entities.ToDoItem", b =>
                {
                    b.HasOne("ToDo.Core.Entities.ToDoList", "ToDoList")
                        .WithMany("Items")
                        .HasForeignKey("ToDoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToDoList");
                });

            modelBuilder.Entity("ToDo.Core.Entities.ToDoList", b =>
                {
                    b.HasOne("ToDo.Core.Entities.User", "User")
                        .WithMany("ToDoLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDo.Core.Entities.ToDoList", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ToDo.Core.Entities.User", b =>
                {
                    b.Navigation("ToDoLists");
                });
#pragma warning restore 612, 618
        }
    }
}
